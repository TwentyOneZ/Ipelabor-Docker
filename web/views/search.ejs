<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Ip√™labor - Busca de Atendimentos</title>
  <style>
        /* --- cart√£o de filtros --- */
        .filters {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }

    .filters form {
      display: flex;
      flex-wrap: wrap;
      gap: 12px;
      align-items: flex-end;
    }

    .filters input[type="text"],
    .filters input[type="date"] {
      flex: 1 1 150px;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }

    .filters button[type="submit"] {
      background: #009688;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
    }

    /* --- estat√≠sticas dentro do cart√£o --- */
    .stats {
      display: flex;
      align-items: center;
      gap: 37px;
      padding: 12px;
      background: rgba(0,0,0,0.05);
      border-radius: 4px;
      margin-top: 16px;        /* sem margin negativa! */
    }
    .stats p {
      margin: 0;
      font-weight: 500;
    }
    .stats-button {
      margin-left: auto;
    }
    #deleteForm button {
      background: #e91e63;
      color: #fff;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      cursor: pointer;
    }

    table { border-collapse: collapse; width: 100%; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
    th { background: #eee; cursor: pointer; }
    /* oculta a coluna msgId */
    #resultsTable td:first-child,
    #resultsTable th:first-child {
      display: none;
    }
    .stats {
      display: flex;
      gap: 37px;
      padding: 10px;
      background: rgba(0,0,0,0.05);
      border-radius: 4px;
      margin: -25px 3px 0px 3px;
    }
    .stats p { margin: 4px 0px; font-weight: 500; }
  </style>
  <script>
    // formata c√©lulas que contenham '*' removendo o asterisco e deixando em negrito
    function formatResults() {
      document.querySelectorAll('#resultsTable tbody td').forEach(td => {
        if (td.textContent.includes('*')) {
          td.innerHTML = td.textContent.replace(/\*/g, '');
          td.style.fontWeight = 'bold';
        }
      });
    }
    document.addEventListener('DOMContentLoaded', formatResults);
  </script>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <div class="header"></div>

  <div class="filters">
    <form method="POST" action="/search">
      <input name="name"    placeholder="Nome"      value="<%= filters.name      %>">
      <input name="empresa" placeholder="Empresa"   value="<%= filters.empresa   %>">
      <input name="sala"    placeholder="Sala"      value="<%= filters.sala      %>">
      <input name="branch"  placeholder="Local"     value="<%= filters.branch    %>">
      <input name="caller"  placeholder="Atendente" value="<%= filters.caller    %>">
      <label>Data In√≠cio:
        <input name="startDate" type="date" value="<%= filters.startDate %>">
      </label>
      <label>Data Fim:
        <input name="endDate"   type="date" value="<%= filters.endDate   %>">
      </label>
      <!-- campos hidden para sort -->
      <input type="hidden" name="sortBy"  id="sortBy"  value="<%= sorting.sortBy  %>">
      <input type="hidden" name="sortDir" id="sortDir" value="<%= sorting.sortDir %>">
      <button type="submit">Buscar</button>
    </form>
    <% if (results.length > 0) {
      // calcula estat√≠sticas
      const total          = results.length;
      const uniquePatients = new Set(results.map(r => r.paciente)).size;
      const uniqueCompanies = new Set(results.map(r => r.empresa)).size;
      const parseSec = t => {
        if (!t) return 0;
        const [m, s] = t.replace('s','').split('m ').map(x=>parseInt(x)||0);
        return m*60 + s;
      };
      const avgEsperaSec  = results.reduce((sum, r) => sum + parseSec(r.espera), 0) / total;
      const avgDuracaoSec = results.reduce((sum, r) => sum + parseSec(r.duracao), 0) / total;
      const fmt = sec => {
        const m = Math.floor(sec/60);
        const s = Math.round(sec % 60);
        return `${m}m ${s}s`;
      };
  %>
  <form id="deleteForm" method="POST" action="/delete">
      <div class="stats">
        <div>
          <p>Total de entradas:    <strong><%= total %></strong></p>
        </div>
        <div>
          <p>Pacientes √∫nicos:     <strong><%= uniquePatients %></strong></p>
        </div>
        <div>
          <p>Empresas √∫nicas:     <strong><%= uniqueCompanies %></strong></p>
        </div>
        <div>
          <p>Tempo m√©dio de espera:   <strong><%= fmt(avgEsperaSec) %></strong></p>
        </div>
        <div>
          <p>Tempo m√©dio de atendimento:  <strong><%= fmt(avgDuracaoSec) %></strong></p>
        </div>
        <div class="stats-button">
          <% if (nivelAcesso === 'admin') { %>
            <button type="submit" style="border: none; padding: 8px; border-radius: 4px; cursor: pointer; margin-left: 10px;">üóëÔ∏è‚úÖ</button>
          <% } %>
          <button type="button" id="exportBtn" style="border: none; padding: 8px; border-radius: 4px; cursor: pointer; margin-left: 10px;">
            <img src="/images/xlsx.png" alt="Exportar XLSX" style="height: 64px; display: block;">
          </button>
        </div>
      </div>
    <% } %>
    </div>

    <% if (results.length > 0) { %>
    <div class="results">
      <table id="resultsTable">
        <thead>
          <tr>
            <% 
              const cols   = ['msgId','paciente','empresa','sala','branch','data','hora_registro','hora_inicio','hora_fim','espera','duracao','caller'];
              const labels = { branch: 'Local', caller: 'Atendente' };
            %>
            <% cols.forEach(col => { %>
              <th 
                data-column="<%= col %>" 
                data-dir="<%= sorting.sortBy === col ? sorting.sortDir : 'DESC' %>"
              >
                <%= labels[col] || (col.charAt(0).toUpperCase() + col.slice(1).replace('_',' ')) %>
              </th>
            <% }) %>
            <% if (nivelAcesso === 'admin') { %>
            <th>‚úÖ</th>
            <% } %>
          </tr>
        </thead>
        <tbody>
          <% results.forEach(r => { %>
            <tr>
              <td><%= r.msgId         %></td>
              <td><%= r.paciente      %></td>
              <td><%= r.empresa       %></td>
              <td><%= r.sala          %></td>
              <td><%= r.branch        %></td>
              <td>
                <%= r.data instanceof Date
                    ? r.data.toLocaleDateString('pt-BR')
                    : r.data %>
              </td>
              <td><%= r.hora_registro %></td>
              <td><%= r.hora_inicio   %></td>
              <td><%= r.hora_fim      %></td>
              <td><%= r.espera        %></td>
              <td><%= r.duracao       %></td>
              <td><%= r.caller        %></td>
              <% if (nivelAcesso === 'admin') { %>
              <td>
                <input
                  type="checkbox"
                  name="deleteIds"
                  value="<%= r.msgId %>"
                >
              </td>
              <% } %>
            </tr>
          <% }) %>
        </tbody>
      </table>
      <script>
        // para o form de busca
        const searchForm = document.querySelector('form[action="/search"]');
        document.querySelectorAll('#resultsTable th').forEach(th => {
          th.addEventListener('click', () => {
            const col = th.dataset.column;
            const dir = th.dataset.dir === 'ASC' ? 'DESC' : 'ASC';
            document.getElementById('sortBy').value  = col;
            document.getElementById('sortDir').value = dir;
            th.dataset.dir = dir;
            searchForm.submit();
          });
        });

        // Novo script para o bot√£o de exportar
        document.getElementById('exportBtn')?.addEventListener('click', () => {
            const form = document.querySelector('form[action="/search"]');
            const params = new URLSearchParams();
            
            // Pega os valores dos filtros do formul√°rio
            new FormData(form).forEach((value, key) => {
                if (value) {
                    params.append(key, value);
                }
            });

            // Redireciona para a rota de exporta√ß√£o com os filtros como query params
            window.location.href = `/export?${params.toString()}`;
        });
      </script>
    </div>
  </form>
  <% } %>

</body>
</html>
